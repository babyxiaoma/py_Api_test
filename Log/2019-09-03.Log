2019-09-03 10:38:56,945 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <体验金活动id正确,领取成功> 不执行!
2019-09-03 10:38:56,946 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <体验金活动id错误,领取失败> 不执行!
2019-09-03 10:38:56,946 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <体验金活动id为空,领取失败> 不执行!
2019-09-03 10:38:56,946 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请活动id正确,申请成功> 不执行!
2019-09-03 10:38:56,946 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请活动id错误,申请失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id正确,获取奖品列表成功> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id带特殊字符错误,获取奖品列表失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id为空,获取奖品列表失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id正确,获取活动详情成功> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id错误,获取活动详情失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id为空,获取活动详情失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取活动签到记录> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <签到id正确,提交签到请求成功> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <签到id错误,提交签到请求失败> 不执行!
2019-09-03 10:38:56,947 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <签到id为空,提交签到请求失败> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <签到id为其他活动id,提交签到请求失败> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id正确,抽取白银转盘活动成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id错误,抽取白银转盘活动失败> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id为空,抽取白银转盘活动失败> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id正确,抽取黄金转盘活动成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <活动id正确,抽取钻石转盘活动成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入BB百家乐游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入连环夺宝2游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入连环夺宝游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入187森林舞会游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入糖果派对3游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入BBIN奖池游戏成功> 不执行!
2019-09-03 10:38:56,948 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入开心消消乐游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入糖果派对游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入糖果派对2游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入猛龙传奇-老虎机游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入金拉霸老虎机游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入百搭777游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入捕鱼达人游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入飞禽走兽游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入抢庄三公游戏成功> 不执行!
2019-09-03 10:38:56,949 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入极速炸金花游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入金鲨银鲨游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入奔驰宝马游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入百人牛牛游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入森林舞会游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入看三张抢庄牛牛游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入射龙门游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入百家乐游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入斗地主游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入十三水游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入幸运五张游戏成功> 不执行!
2019-09-03 10:38:56,950 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入抢庄牌九游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入极速炸金花游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入通比牛牛游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入21点游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入押庄龙虎游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入三公游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入炸金花游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入抢庄牛牛游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入二八杠游戏成功> 不执行!
2019-09-03 10:38:56,951 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <进入德州扑克游戏成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <KY游戏平台号正确,余额转出成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <KY游戏平台号错误,余额转出失败> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <KY游戏平台号为空,余额转出失败> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <BBIN游戏平台号正确,余额转出成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <AGIN游戏平台号正确,余额转出成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <JDB游戏平台号正确,余额转出成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码正确,新密码正确,编辑成功> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码错误,新密码正确,编辑失败> 不执行!
2019-09-03 10:38:56,952 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码为空,新密码正确,编辑失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码正确,新密码不一致,编辑失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码正确,新密码一致长度不对,编辑失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <原始密码正确,新密码为空,编辑失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <支付宝姓名带特殊符号,账号正确,绑定支付宝失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <支付宝姓名正确,账号带特殊字符,绑定支付宝失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <支付宝姓名为空,账号正确,绑定支付宝失败> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <支付宝姓名,账号正确,绑定支付宝成功> 不执行!
2019-09-03 10:38:56,953 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <支付宝姓名,账号正确,绑定支付宝成功> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款信息正确,入款提交成功> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款姓名带特殊字符错误,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款姓名为空,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款账户带特殊字符错误,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款账户为空,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款银行带特殊字符错误,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款存款银行为空,入款提交失败> 不执行!
2019-09-03 10:38:56,954 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额超出最大金额限制,入款提交失败> 不执行!
2019-09-03 10:38:56,955 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额等于最大限制金额,入款提交成功> 不执行!
2019-09-03 10:38:56,955 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额小于最大限制金额,入款提交成功> 不执行!
2019-09-03 10:38:56,955 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额大于最小限制金额,入款提交成功> 不执行!
2019-09-03 10:38:56,955 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额小于最小限制金额,入款提交失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款金额等于最小限制金额,入款提交成功> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款姓名,卡号为空,入款提交失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <公司入款入款姓名,卡号,银行为空,入款提交失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额小于最小金额限制,申请失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额大于自身金额,申请失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额大于最大限制金额,申请失败> 不执行!
2019-09-03 10:38:56,956 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额为空,申请失败> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额等于最小金额限制,申请成功> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <申请提款金额大于最小金额限制,申请成功> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转入金额大于自身金额,转入失败> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转入金额小于自身金额,转入成功> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转入金额带特殊字符错误,转入失败> 不执行!
2019-09-03 10:38:56,957 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转入金额为空,转入失败> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额大于余额宝金额,转出失败> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额小于余额宝金额,转出成功> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额小于余额宝金额,转出密码带特殊字符错误,转出失败> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额小于余额宝金额,转出密码为空,转出失败> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额为空,转出密码正确,转出失败> 不执行!
2019-09-03 10:38:56,958 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <余额宝转出金额为负数,转出密码正确,转出失败> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取活动大奖记录> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取活动抽奖记录> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取本周签到状态> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取游戏列表> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取弹窗公告> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取余额宝余额信息> 不执行!
2019-09-03 10:38:56,959 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取跑马灯公告> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取系统设置信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取余额宝规则信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取余额宝资金明细信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取余额宝下次收益到账时间> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取提款扣款信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取进入奖金榜信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取余额信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取个人抽奖记录信息> 不执行!
2019-09-03 10:38:56,960 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <邮件全部阅读> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <邮件全部删除> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取vip充值列表> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取公司入款列表> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取支付渠道> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取代理收益信息> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取代理返利榜单> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取代理佣金领取记录> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取推广奖励信息> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取直属会员列表> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取充值记录> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取账变记录> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取取款记录> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <所有平台资金转出> 不执行!
2019-09-03 10:38:56,961 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取跑马灯中奖信息> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取银行列表> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取轮播> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取联系客服> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取首页最近一条公告> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取公告列表> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取推广规则链接> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取转盘今日有效投注> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取分享领金币> 不执行!
2019-09-03 10:38:56,962 -- Auto_frame -- Api_test_case.py -- 78 -- WARNING -- 用例: <获取活动列表> 不执行!
2019-09-03 12:36:19,533 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': 'method param miss:rule_id'}
2019-09-03 12:36:20,458 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': []}
2019-09-03 12:36:24,885 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '您当前没有积分!'}
2019-09-03 12:36:26,292 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '您当前没有积分!'}
2019-09-03 12:36:27,059 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '您当前没有积分!'}
2019-09-03 12:36:34,618 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:36,576 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:36,883 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}
2019-09-03 12:36:37,180 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!'}
2019-09-03 12:36:38,563 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:39,557 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:40,575 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:40,891 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}
2019-09-03 12:36:41,237 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!'}
2019-09-03 12:36:41,583 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!'}
2019-09-03 12:36:41,863 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!'}
2019-09-03 12:36:42,154 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:42,456 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:42,768 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:43,060 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:43,346 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:43,638 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:43,947 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:44,260 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:44,563 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:44,863 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:45,150 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}
2019-09-03 12:36:45,434 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}
2019-09-03 12:36:45,716 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}
2019-09-03 12:36:46,018 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}
2019-09-03 12:36:46,329 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}
2019-09-03 12:36:46,626 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}
2019-09-03 12:36:46,923 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}
2019-09-03 12:36:47,217 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!'}
2019-09-03 12:36:48,682 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:50,776 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:51,952 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '余额不足.'}
2019-09-03 12:36:52,249 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:52,553 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:52,840 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!'}
2019-09-03 12:36:53,244 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:53,583 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:53,870 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}
2019-09-03 12:36:54,169 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:54,470 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:54,768 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}
2019-09-03 12:36:57,627 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:36:57,930 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: 请输入支付宝姓名,实际响应msg: 支付宝不能重复绑定,修改请联系客服,实际响应结果: {'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}
2019-09-03 12:36:58,235 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: 请输入支付宝账号,实际响应msg: 支付宝不能重复绑定,修改请联系客服,实际响应结果: {'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}
2019-09-03 12:36:58,546 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}
2019-09-03 12:37:00,984 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:01,294 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:01,628 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:01,962 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:02,330 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:02,651 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:06,835 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:07,155 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 0,实际响应结果: {'code': 0, 'msg': '操作成功', 'data': True}
2019-09-03 12:37:07,494 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: 单笔出款下限:50,实际响应msg:  余额不足！,实际响应结果: {'code': 1000001, 'msg': ' 余额不足！'}
2019-09-03 12:37:08,149 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: 单笔出款上限:10000,实际响应msg:  余额不足！,实际响应结果: {'code': 1000001, 'msg': ' 余额不足！'}
2019-09-03 12:37:08,763 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': ' 余额不足！'}
2019-09-03 12:37:09,094 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000001,实际响应结果: {'code': 1000001, 'msg': ' 余额不足！'}
2019-09-03 12:37:11,370 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!'}
2019-09-03 12:37:11,716 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!'}
2019-09-03 12:37:12,045 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 0,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}
2019-09-03 12:37:12,400 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}
2019-09-03 12:37:12,737 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}
2019-09-03 12:37:13,086 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!'}
2019-09-03 12:37:13,419 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: 1000001,实际响应code: 1000008,实际响应结果: {'code': 1000008, 'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!'}
