2019-09-11 09:00:20,527 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '免费领取机会已用完,请充值后领取'}>
2019-09-11 09:00:21,934 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'method param miss:rule_id'}>
2019-09-11 09:00:22,865 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': []}>
2019-09-11 09:00:27,249 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '您当前没有积分!'}>
2019-09-11 09:00:28,578 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '您当前没有积分!'}>
2019-09-11 09:00:29,269 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '您当前没有积分!'}>
2019-09-11 09:00:31,044 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '进入游戏失败，请联系管理员，错误码：44444'}>
2019-09-11 09:00:35,240 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '进入游戏失败，请联系管理员，错误码：44444'}>
2019-09-11 09:00:35,529 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:35,850 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:36,147 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:36,442 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:36,738 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:37,037 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:37,330 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:37,627 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:37,944 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:38,257 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:38,552 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:38,877 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:39,177 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:39,465 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:48,362 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:48,660 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:48,973 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:49,318 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:49,644 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!'}>
2019-09-11 09:00:56,155 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:56,455 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!'}>
2019-09-11 09:00:56,756 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:57,067 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:57,378 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!'}>
2019-09-11 09:00:57,722 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:58,034 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:58,359 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!'}>
2019-09-11 09:00:58,658 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:58,993 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:59,291 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!'}>
2019-09-11 09:00:59,596 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!'}>
2019-09-11 09:00:59,891 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!'}>
2019-09-11 09:01:01,248 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '原始支付密码错误,请重新输入'}>
2019-09-11 09:01:03,418 -- Auto_frame -- Assertion.py -- 37 -- ERROR -- 预期结果不在实际结果中!,预期结果: <真实姓名必须为中文>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}>
2019-09-11 09:01:04,124 -- Auto_frame -- Assertion.py -- 37 -- ERROR -- 预期结果不在实际结果中!,预期结果: <请输入支付宝姓名>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}>
2019-09-11 09:01:04,442 -- Auto_frame -- Assertion.py -- 37 -- ERROR -- 预期结果不在实际结果中!,预期结果: <请输入支付宝账号>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}>
2019-09-11 09:01:04,745 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '支付宝不能重复绑定,修改请联系客服'}>
2019-09-11 09:01:05,423 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:05,754 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:06,082 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:06,428 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:06,747 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:07,059 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:11,250 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:11,606 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'code': 0, 'msg': '操作成功', 'data': True}>
2019-09-11 09:01:11,939 -- Auto_frame -- Assertion.py -- 37 -- ERROR -- 预期结果不在实际结果中!,预期结果: <单笔出款下限:50>,实际响应msg: < 余额不足！>,实际响应结果: <{'code': 1000001, 'msg': ' 余额不足！'}>
2019-09-11 09:01:12,564 -- Auto_frame -- Assertion.py -- 37 -- ERROR -- 预期结果不在实际结果中!,预期结果: <单笔出款上限:10000>,实际响应msg: < 余额不足！>,实际响应结果: <{'code': 1000001, 'msg': ' 余额不足！'}>
2019-09-11 09:01:13,251 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': ' 余额不足！'}>
2019-09-11 09:01:13,561 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': ' 余额不足！'}>
2019-09-11 09:01:14,356 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': '资金不足,请先充值!'}>
2019-09-11 09:01:14,977 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,9秒再重试!', 'data': '请求频率过高,9秒再重试!'}>
2019-09-11 09:01:15,284 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,9秒再重试!', 'data': '请求频率过高,9秒再重试!'}>
2019-09-11 09:01:15,583 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!'}>
2019-09-11 09:01:15,896 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!'}>
2019-09-11 09:01:16,219 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!'}>
2019-09-11 09:01:16,557 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}>
2019-09-11 09:01:16,851 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'code': 1000008, 'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!'}>
2019-09-11 09:01:34,800 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:35,097 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:35,406 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:35,748 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:36,061 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:36,346 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:36,636 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:36,916 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:37,209 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:37,496 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:37,799 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:38,084 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:38,392 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:38,682 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
2019-09-11 09:01:38,987 -- Auto_frame -- Assertion.py -- 30 -- ERROR -- 预期结果不在实际结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'code': 1000001, 'msg': 'controller not exists:Index'}>
