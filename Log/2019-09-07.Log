2019-09-07 09:00:13,765 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '还未达到此活动领取条件', 'code': 1000001}>
2019-09-07 09:00:14,759 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': [], 'code': 0}>
2019-09-07 09:00:18,768 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '您当前没有积分!', 'code': 1000001}>
2019-09-07 09:00:20,127 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '您当前没有积分!', 'code': 1000001}>
2019-09-07 09:00:20,877 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '您当前没有积分!', 'code': 1000001}>
2019-09-07 09:00:27,799 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '余额不足.', 'code': 1000001}>
2019-09-07 09:00:29,025 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '余额不足.', 'code': 1000001}>
2019-09-07 09:00:29,318 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:29,613 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:29,904 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:30,193 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:30,520 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:30,842 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:31,136 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!', 'code': 1000008}>
2019-09-07 09:00:32,099 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '余额不足.', 'code': 1000001}>
2019-09-07 09:00:32,997 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '余额不足.', 'code': 1000001}>
2019-09-07 09:00:34,424 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '余额不足.', 'code': 1000001}>
2019-09-07 09:00:34,711 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,7秒再重试!', 'data': '请求频率过高,7秒再重试!', 'code': 1000008}>
2019-09-07 09:00:35,027 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!', 'code': 1000008}>
2019-09-07 09:00:35,349 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!', 'code': 1000008}>
2019-09-07 09:00:35,627 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,6秒再重试!', 'data': '请求频率过高,6秒再重试!', 'code': 1000008}>
2019-09-07 09:00:35,914 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!', 'code': 1000008}>
2019-09-07 09:00:36,206 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!', 'code': 1000008}>
2019-09-07 09:00:36,505 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!', 'code': 1000008}>
2019-09-07 09:00:36,788 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,5秒再重试!', 'data': '请求频率过高,5秒再重试!', 'code': 1000008}>
2019-09-07 09:00:37,080 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!', 'code': 1000008}>
2019-09-07 09:00:37,372 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!', 'code': 1000008}>
2019-09-07 09:00:37,684 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,4秒再重试!', 'data': '请求频率过高,4秒再重试!', 'code': 1000008}>
2019-09-07 09:00:37,988 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!', 'code': 1000008}>
2019-09-07 09:00:38,288 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!', 'code': 1000008}>
2019-09-07 09:00:38,582 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,3秒再重试!', 'data': '请求频率过高,3秒再重试!', 'code': 1000008}>
2019-09-07 09:00:38,886 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:39,185 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:39,486 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:39,824 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,2秒再重试!', 'data': '请求频率过高,2秒再重试!', 'code': 1000008}>
2019-09-07 09:00:40,121 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:40,404 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:40,694 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,1秒再重试!', 'data': '请求频率过高,1秒再重试!', 'code': 1000008}>
2019-09-07 09:00:40,985 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!', 'code': 1000008}>
2019-09-07 09:00:41,276 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,0秒再重试!', 'data': '请求频率过高,0秒再重试!', 'code': 1000008}>
2019-09-07 09:00:43,212 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:43,504 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:43,812 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:44,191 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '原始支付密码错误,请重新输入', 'code': 1000001}>
2019-09-07 09:00:46,233 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: <真实姓名必须为中文>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'msg': '支付宝不能重复绑定,修改请联系客服', 'code': 1000001}>
2019-09-07 09:00:46,813 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: <请输入支付宝姓名>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'msg': '支付宝不能重复绑定,修改请联系客服', 'code': 1000001}>
2019-09-07 09:00:47,107 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: <请输入支付宝账号>,实际响应msg: <支付宝不能重复绑定,修改请联系客服>,实际响应结果: <{'msg': '支付宝不能重复绑定,修改请联系客服', 'code': 1000001}>
2019-09-07 09:00:47,413 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '支付宝不能重复绑定,修改请联系客服', 'code': 1000001}>
2019-09-07 09:00:48,055 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:48,363 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:48,682 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:49,020 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:49,331 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:49,648 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:53,610 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:53,928 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <0>,实际响应结果: <{'msg': '操作成功', 'data': True, 'code': 0}>
2019-09-07 09:00:54,309 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: <单笔出款下限:50>,实际响应msg: < 余额不足！>,实际响应结果: <{'msg': ' 余额不足！', 'code': 1000001}>
2019-09-07 09:00:54,927 -- Auto_frame -- Assertion.py -- 35 -- ERROR -- 实际结果不在预期结果中!,预期结果: <单笔出款上限:10000>,实际响应msg: < 余额不足！>,实际响应结果: <{'msg': ' 余额不足！', 'code': 1000001}>
2019-09-07 09:00:55,576 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': ' 余额不足！', 'code': 1000001}>
2019-09-07 09:00:55,910 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': ' 余额不足！', 'code': 1000001}>
2019-09-07 09:00:56,524 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000001>,实际响应结果: <{'msg': '资金不足,请先充值!', 'code': 1000001}>
2019-09-07 09:00:57,121 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,9秒再重试!', 'data': '请求频率过高,9秒再重试!', 'code': 1000008}>
2019-09-07 09:00:57,411 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,9秒再重试!', 'data': '请求频率过高,9秒再重试!', 'code': 1000008}>
2019-09-07 09:00:57,698 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <0>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,9秒再重试!', 'data': '请求频率过高,9秒再重试!', 'code': 1000008}>
2019-09-07 09:00:57,987 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:58,281 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:58,582 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
2019-09-07 09:00:58,874 -- Auto_frame -- Assertion.py -- 29 -- ERROR -- 实际结果不在预期结果中!,预期结果: <1000001>,实际响应code: <1000008>,实际响应结果: <{'msg': '请求频率过高,8秒再重试!', 'data': '请求频率过高,8秒再重试!', 'code': 1000008}>
